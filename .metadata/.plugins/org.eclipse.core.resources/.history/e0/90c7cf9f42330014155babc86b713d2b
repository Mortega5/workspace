package main

import (
	"fmt"
	"math"
)

func Sqrt(x float64) float64 {
	var z float64 = float64(1)
	for i := 0; i < 10; i++ {
		z = z - ((math.Pow(z, 2) - x) / (2 * z))
		fmt.Printf("valor de i: %d\t valor de z: %g\n", i, z)
	}
	return z
}
func Sqrt_newton_fixed_iters(x float64, values int) float64 {
	z := float64(1)

	fmt.Println("> Sqrt by the Newton method (10 iters):")
	for it := float64(1); it <= float64(values); it++ {
		fmt.Printf("\tIteration %g: %g\n", it, z)
		z = z - ((math.Pow(z, 2) - x) / (2 * z))
	}
	fmt.Printf("\tSquare root of '%g' (approx. %d values) = %g\n", x, values, z)

	return z
}
func main() {
	var x float64 = 9
	fmt.Println(Sqrt(x))
	fmt.Println(Sqrt_newton_fixed_iters(x, 10))
	fmt.Println(math.Sqrt(x))

	mapa:=make(map[string] int)
	i,ok:=mapa["hola"]
	fmt.Println("longitud: ",len(mapa),"\t i: ",i,"\t ok: ",ok)

}
